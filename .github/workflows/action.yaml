name: CI

on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout

jobs:
  # dockerBuild:
  #   name: Build and Push Docker Image
  #   runs-on: ubuntu-latest
  #   environment: production
  #   if: github.event_name == 'push' && github.ref == 'refs/heads/main' && github.event_path == './docker/*'

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2

  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         role-to-assume: ${{ secrets.AWS_ROLE }}
  #         aws-region: ${{ secrets.AWS_REGION }}

  #     - name: Login to Amazon ECR
  #       id: login-ecr
  #       uses: aws-actions/amazon-ecr-login@v1

  #     - name: Build, tag, and push image to Amazon ECR
  #       id: build-image
  #       env:
  #         ECR_REGISTRY: 339712957572.dkr.ecr.us-east-1.amazonaws.com/desafio-devops
  #       working-directory: ./docker
  #       run: |
  #         docker build -t desafio-devops .
  #         docker tag desafio-devops:latest $ECR_REGISTRY:latest
  #         docker push $ECR_REGISTRY:latest || true

  deployInfra:
    name: Deploy Infrastructure
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        working-directory: ./infrastructure
        run: terraform init

      - name: Terraform Plan
        working-directory: ./infrastructure
        run: terraform plan -input=false

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'  # You may adjust this condition as needed
        working-directory: ./infrastructure
        run: terraform apply -auto-approve -input=false
